<virtual-sensor name="ETZ_DPP_Comm_Cmd" priority="10" >
    <processing-class>
        <class-name>gsn.vsensor.BridgeVirtualSensorPermasense</class-name>
        <unique-timestamps>false</unique-timestamps>
        <web-input>
            <command name="dppmsg">
                <field name="target_id" type="*text" defaultvalue="65535">the device_id of the LWB receiver node</field>
                <field name="type" type="*select:|LWB_RESUME,0|LWB_PAUSE,1|LWB_ROUND_PERIOD,2|COMM_STATUS_PERIOD,3">the LWB command type</field>
                <field name="value" type="*text">the argument for this specific LWB command</field>
            </command>
        </web-input>
        <output-structure>
            <field name="DEVICE_ID" type="INTEGER" />
            <field name="GENERATION_TIME" type="BIGINT" unit="unixtime" index="true"/>
            <field name="GENERATION_TIME_MICROSEC" type="BIGINT"/>
            <field name="TIMESTAMP" type="BIGINT" unit="unixtime" />
            <field name="TARGET_ID" type="INTEGER" />
            <field name="MESSAGE_TYPE" type="INTEGER" />
            <field name="SEQNR" type="INTEGER" />
            <field name="PAYLOAD_LENGTH" type="INTEGER" />
            
            <field name="TYPE" type="INTEGER" />
            <field name="VALUE" type="SMALLINT" />
        </output-structure>
    </processing-class>
    <description>DPP Communication Processor Command messages from the ETZ deployment</description>
    <life-cycle pool-size="10" />
    <addressing />
    <storage />
    <streams>
		<stream name="data1">
            <source alias="source" storage-size="1" sampling-rate="1">
                <address wrapper="backlog">
                    <predicate key="remote-connection">permasense-etz-bs01.ethz.ch:9003</predicate>
                    <predicate key="plugin-classname">gsn.wrappers.backlog.plugins.DPPMessagePlugin</predicate>
                    <predicate key="message-classname">gsn.wrappers.backlog.plugins.dpp.CommCmdMsg</predicate>
                </address>
                <query> select * from wrapper </query>
            </source>
            <query> select * from source </query>
        </stream>
        <stream name="data2">
            <source alias="source" storage-size="1" sampling-rate="1">
                <address wrapper="backlog">
                    <predicate key="remote-connection">permasense-etz-bs02.ethz.ch:9003</predicate>
                    <predicate key="plugin-classname">gsn.wrappers.backlog.plugins.DPPMessagePlugin</predicate>
                    <predicate key="message-classname">gsn.wrappers.backlog.plugins.dpp.CommCmdMsg</predicate>
                </address>
                <query> select * from wrapper </query>
            </source>
            <query> select * from source </query>
        </stream>
        <stream name="data3">
            <source alias="source" storage-size="1" sampling-rate="1">
                <address wrapper="backlog">
                    <predicate key="remote-connection">permasense-etz-bs03.ethz.ch:9003</predicate>
                    <predicate key="plugin-classname">gsn.wrappers.backlog.plugins.DPPMessagePlugin</predicate>
                    <predicate key="message-classname">gsn.wrappers.backlog.plugins.dpp.CommCmdMsg</predicate>
                </address>
                <query> select * from wrapper </query>
            </source>
            <query> select * from source </query>
        </stream>
        <stream name="data4">
            <source alias="source" storage-size="1" sampling-rate="1">
                <address wrapper="backlog">
                    <predicate key="remote-connection">permasense-etzl-bs01.ethz.ch:9003</predicate>
                    <predicate key="plugin-classname">gsn.wrappers.backlog.plugins.DPPMessagePlugin</predicate>
                    <predicate key="message-classname">gsn.wrappers.backlog.plugins.dpp.CommCmdMsg</predicate>
                </address>
                <query> select * from wrapper </query>
            </source>
            <query> select * from source </query>
        </stream>
    </streams>
</virtual-sensor>
