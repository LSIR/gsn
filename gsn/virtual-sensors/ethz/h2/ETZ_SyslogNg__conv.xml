<virtual-sensor name="ETZ_SyslogNg__conv" priority="10" >
    <processing-class>
        <class-name>gsn.vsensor.BridgeVirtualSensorPermasense</class-name>
        <unique-timestamps>false</unique-timestamps>
        <init-params>
            <param name="persistant">true</param>
            <param name="scriptlet">
                <![CDATA[
                	try {
						// parse syslog message and generate additional fields
						def msg = new String(LOG_MESSAGE, "UTF-8").split("\\s+", 6);
						PRIORITY = msg[0].substring(1, msg[0].length()-1).toShort();
						HOST = msg[4];
						msg = msg[5].split(":", 2);
						if (msg.size() == 2 && msg[0].find(" ") == null) {
							PROGRAM = msg[0];
							msg = msg[1];
							MESSAGE = msg.getBytes("UTF-8");
						} else {
							PROGRAM = null;
							msg = msg[0];
							MESSAGE = msg.getBytes("UTF-8");
						}
						
						// send email on backlog error
						if (POSITION != null && GENERATION_TIME > System.currentTimeMillis()-2592000000) {
							def mailrecipients = ["permasense-test@tik.ee.ethz.ch"];
			    		
							if ( PROGRAM.toLowerCase() == "backlog" && PRIORITY%8 <= 3 ) {
								// Notify by email
								def emailTitle = "[PermaSense-GSN-Test] - BACKLOG ERROR [" + (new Date(GENERATION_TIME)).format('dd/MM/yyyy HH:mm:ss') + "] - " + vsname.split("_",2)[0].toUpperCase() + " POS " + POSITION;
								def emailContent = "BACKLOG ERROR [" + (new Date(GENERATION_TIME)).format('dd/MM/yyyy HH:mm:ss') + "]" + vsname.split("_",2)[0].toUpperCase() + " POS " + POSITION + " (device_id=" + DEVICE_ID + "):\n\n" + msg;
								
								sendEmail(mailrecipients, emailTitle, emailContent);
							}
						}
					} catch(Throwable e) {
						org.apache.log4j.Logger.getLogger(gsn.processor.ScriptletProcessor.class).error(e);
					}
                ]]>
            </param>
        </init-params>
        <output-structure>
            <field name="POSITION" type="INTEGER" index="true" />
            <field name="DEVICE_ID" type="INTEGER" />
            <field name="GENERATION_TIME" type="BIGINT" unit="unixtime" index="true"/>
            <field name="TIMESTAMP" type="BIGINT" unit="unixtime" />
            
            <field name="PRIORITY" type="SMALLINT" />
            <field name="HOST" type="VARCHAR(256)" />
            <field name="PROGRAM" type="VARCHAR(256)" />
            <field name="MESSAGE" type="BINARY" />
            
        </output-structure>
    </processing-class>
    <description>converted CoreStation hardware status from ETZ deployment</description>
    <life-cycle pool-size="10" />
    <addressing />
    <storage />
    <streams>
        <stream name="data">
            <source alias="source" storage-size="1" sampling-rate="1">
                <address wrapper="local">
                    <predicate key="query"> select * from ETZ_SyslogNg__mapped </predicate>
                    <predicate key="start-time">continue</predicate>
                </address>
                <query> select * from wrapper </query>
            </source>
            <query> select * from source </query>
        </stream>
    </streams>
</virtual-sensor>
