<virtual-sensor name="ETZ_BackLogStatus_Dynamic__mapped" priority="10" >
    <processing-class>
        <class-name>gsn.vsensor.BridgeVirtualSensorPermasense</class-name>
        <unique-timestamps>false</unique-timestamps>
        <init-params>
            <param name="position_mapping" />
            <param name="persistant">true</param>
            <param name="scriptlet">
                <![CDATA[
                    if ( ! isdef('positionMap')) { positionMap = [:]; }
                    if (POSITION != null && GENERATION_TIME > System.currentTimeMillis()-2592000000) { positionMap.put(POSITION, [System.currentTimeMillis(), DEVICE_ID]); }
                ]]>
            </param>
            <param name="period">600000</param>
            <param name="scriplet-periodic">
                <![CDATA[
                	try {
                		// default alarm time after which an email is sent if no messages have been received
                    	def timeDifferenceOffsetDefault = 86400000;
                		// a list of alarm time per position
                    	def timeDifferenceOffsetPositionMap = [:];
                    	// the mail recipients
                    	def mailrecipients = ["permasense-test@tik.ee.ethz.ch"];
                    	
                    	if ( isdef('positionMap')) {
                    		def rmlist = [];
                    		for (entry in positionMap) {
                    			def now = System.currentTimeMillis();
                    	    	def timeDifference = now - entry.value[0];
                    	    	def timeDifferenceOffset = timeDifferenceOffsetDefault;
                    	    	if (timeDifferenceOffsetPositionMap.containsKey(entry.key)) {
                    	    		timeDifferenceOffset = timeDifferenceOffsetPositionMap.get(entry.key);
                    	    	}
                    	    	if (timeDifference > timeDifferenceOffset) {
                    	    		// Notify by email
                    	    		def emailTitle = "[PermaSense-GSN-Test] - OFFLINE WARNING [" + (new Date(now)).format('dd/MM/yyyy HH:mm:ss') + "] - " + vsname.split("_",2)[0].toUpperCase() + " POS " + entry.key;
                    	    		def emailContent = "OFFLINE WARNING [" + (new Date(now)).format('dd/MM/yyyy HH:mm:ss') + "] - " + vsname.split("_",2)[0].toUpperCase() + " POS " + entry.key + " (device_id=" + entry.value[1] + "):\n\n No " + vsname + " messages received in the last " + (timeDifference/60000.0) + " minutes.";

                       		 		sendEmail(mailrecipients, emailTitle, emailContent);
                        			rmlist.add(entry.key)
                        		}
                      		}
                        	positionMap.keySet().removeAll( rmlist as Set );
                    	}
					} catch(Throwable e) {
						org.apache.log4j.Logger.getLogger(gsn.processor.ScriptletProcessor.class).error(e);
					}
                ]]>
            </param>
        </init-params>
        <output-structure>
            <field name="POSITION" type="INTEGER" index="true" />
            <field name="DEVICE_ID" type="INTEGER" />
            <field name="GENERATION_TIME" type="BIGINT" unit="unixtime" index="true"/>
            <field name="TIMESTAMP" type="BIGINT" unit="unixtime" />
            
            <field name="UPTIME" type="INTEGER" unit="s" />
            <field name="ERROR_COUNTER" type="INTEGER" />
            <field name="EXCEPTION_COUNTER" type="INTEGER" />
            
            <field name="GSN_PLUGIN_MSG_IN_COUNTER" type="INTEGER" />
            <field name="GSN_PLUGIN_MSG_OUT_COUNTER" type="INTEGER" />
            <field name="GSN_PLUGIN_MSG_ACK_IN_COUNTER" type="INTEGER" />
            <field name="GSN_PING_OUT_COUNTER" type="INTEGER" />
            <field name="GSN_PING_ACK_IN_COUNTER" type="INTEGER" />
            <field name="GSN_PING_IN_COUNTER" type="INTEGER" />
            <field name="GSN_PING_ACK_OUT_COUNTER" type="INTEGER" />
            <field name="GSN_CONNECTION_LOSSES" type="INTEGER" />
            
            <field name="DB_ENTRIES" type="INTEGER" />
            <field name="DB_SIZE" type="INTEGER" unit="kB" />
            <field name="DB_STORE_COUNTER" type="INTEGER" />
            <field name="DB_REMOVE_COUNTER" type="INTEGER" />
            <field name="DB_STORE_TIME_MIN" type="INTEGER" unit="ms" />
            <field name="DB_STORE_TIME_MEAN" type="INTEGER" unit="ms" />
            <field name="DB_STORE_TIME_MAX" type="INTEGER" unit="ms" />
            <field name="DB_REMOVE_TIME_MIN" type="INTEGER" unit="ms" />
            <field name="DB_REMOVE_TIME_MEAN" type="INTEGER" unit="ms" />
            <field name="DB_REMOVE_TIME_MAX" type="INTEGER" unit="ms" />
            
			<field name="SCHEDULE_CREATED" type="BIGINT" unit="unixtime" />
			<field name="SCHEDULE_PLUG_ACTION_COUNTER" type="INTEGER" />
			<field name="SCHEDULE_SCRIPT_EXEC_COUNTER" type="INTEGER" />
            
			<field name="PLUG_FIN_IN_TIME_COUNTER" type="INTEGER" />
			<field name="PLUG_NOT_FIN_IN_TIME_COUNTER" type="INTEGER" />
			<field name="SCRIPT_FIN_SUC_IN_TIME_COUNTER" type="INTEGER" />
			<field name="SCRIPT_FIN_UNSUC_IN_TIME_COUNTER" type="INTEGER" />
			<field name="SCRIPT_NOT_FIN_IN_TIME_COUNTER" type="INTEGER" />

			<field name="TOS_MSG_RECV_COUNTER" type="INTEGER" />
			<field name="TOS_ACK_SEND_COUNTER" type="INTEGER" />
			<field name="TOS_MSG_SEND_COUNTER" type="INTEGER" />

            <field name="VM_PEAK" type="INTEGER" unit="kB" />
            <field name="VM_SIZE" type="INTEGER" unit="kB" />
            <field name="VM_LCK" type="INTEGER" unit="kB" />
            <field name="VM_HWM" type="INTEGER" unit="kB" />
            <field name="VM_RSS" type="INTEGER" unit="kB" />
            <field name="VM_DATA" type="INTEGER" unit="kB" />
            <field name="VM_STK" type="INTEGER" unit="kB" />
            <field name="VM_EXE" type="INTEGER" unit="kB" />
            <field name="VM_LIB" type="INTEGER" unit="kB" />
            <field name="VM_PTE" type="INTEGER" unit="kB" />
            <field name="THREADS" type="INTEGER" />
            <field name="VOLUNTARY_CTXT_SWITCHES" type="INTEGER" />
            <field name="NONVOLUNTARY_CTXT_SWITCHES" type="INTEGER" />
			
            <field name="RUSAGE_UTIME" type="DOUBLE" unit="s" />
            <field name="RUSAGE_STIME" type="DOUBLE" unit="s" />
            <field name="RUSAGE_MINFLT" type="INTEGER" />
            <field name="RUSAGE_MAJFLT" type="INTEGER" />
            <field name="RUSAGE_NVCSW" type="INTEGER" />
            <field name="RUSAGE_NIVCSW" type="INTEGER" />
        </output-structure>
    </processing-class>
    <description>dynamic status information of BackLog from ETZ deployment</description>
    <life-cycle pool-size="10" />
    <addressing />
    <storage />
    <streams>
        <stream name="data">
            <source alias="source" storage-size="1" sampling-rate="1">
                <address wrapper="remote-rest">
                    <predicate key="query"> select * from ETZ_BackLogStatus_Dynamic</predicate>
                    <predicate key="remote-contact-point">http://tpvt.permasense.ethz.ch/streaming/</predicate>
                    <predicate key="start-time">continue</predicate>
                </address>
                <query> select * from wrapper </query>
            </source>
            <query> select * from source </query>
        </stream>
    </streams>
</virtual-sensor>
