<virtual-sensor name="ETZ_DPP_Status__conv" priority="10" >
    <processing-class>
        <class-name>gsn.vsensor.BridgeVirtualSensorPermasense</class-name>
        <unique-timestamps>false</unique-timestamps>
        <init-params>
            <param name="persistant">true</param>
            <param name="scriptlet">
                <![CDATA[
                	try {
                		LWB_N_RX = LWB_N_HOPS1 = LWB_N_HOPS2 = LWB_N_HOPS3 = NETWORK_DWELL_TIME = null;

                    	if (LWB_N_RX_HOPS != null) {
                    		LWB_N_RX = (short)(LWB_N_RX_HOPS & 0x0f);
                    		LWB_N_HOPS1 = (short)((LWB_N_RX_HOPS>>4) & 0x0f);
                    		LWB_N_HOPS2 = (short)((LWB_N_RX_HOPS>>8) & 0x0f);
                    		LWB_N_HOPS3 = (short)((LWB_N_RX_HOPS>>12) & 0x0f);
                    	}
                    	if (TEMP != null)
                    		TEMP = (double)TEMP / 100.0;
                    	if (VCC != null)
                    		VCC = ((double)VCC * 4.0) / 1023.0;
                    	if (CPU_DC != null)
                    		CPU_DC = (double)CPU_DC / 10.0;
                    	if (RF_DC != null)
                    		RF_DC = (double)RF_DC / 10.0;
                    	if (RF_PER != null)
                    		RF_PER = (double)RF_PER / 100.0;
                    	if (LWB_FSR != null)
                    		LWB_FSR = (double)LWB_FSR / 100.0;
                    	
                    	if (GENERATION_TIME != null && TIMESTAMP != null)
                    		NETWORK_DWELL_TIME = (int)(TIMESTAMP - GENERATION_TIME);
					} catch(Throwable e) {
						org.apache.log4j.Logger.getLogger(gsn.processor.ScriptletProcessor.class).error(e);
					}
                ]]>
            </param>
        </init-params>
        <output-structure>
            <field name="POSITION" type="INTEGER" index="true" />
            <field name="DEVICE_ID" type="INTEGER" />
            <field name="GENERATION_TIME" type="BIGINT" unit="unixtime" index="true"/>
            <field name="GENERATION_TIME_MICROSEC" type="BIGINT"/>
            <field name="TIMESTAMP" type="BIGINT" unit="unixtime" />
            <field name="NETWORK_DWELL_TIME" type="INTEGER" unit="ms" />
            <field name="MESSAGE_TYPE" type="INTEGER" />
            <field name="SEQNR" type="INTEGER" />
            <field name="PAYLOAD_LENGTH" type="INTEGER" />
            
            <field name="UPTIME" type="BIGINT" unit="s" />
            <field name="TEMP" type="DOUBLE" unit="Â°C" />
            <field name="VCC" type="DOUBLE" unit="V" />
            <field name="CPU_DC" type="DOUBLE" unit="%" />
            <field name="RF_DC" type="DOUBLE" unit="%" />
            <field name="LWB_RX_CNT" type="INTEGER" />
            <field name="LWB_N_RX" type="SMALLINT" />
            <field name="LWB_N_HOPS1" type="SMALLINT" />
            <field name="LWB_N_HOPS2" type="SMALLINT" />
            <field name="LWB_N_HOPS3" type="SMALLINT" />
            <field name="RF_PER" type="DOUBLE" unit="%" />
            <field name="RF_SNR" type="SMALLINT" unit="dB" />
            <field name="LWB_RSSI1" type="SMALLINT" unit="dBm" />
            <field name="LWB_RSSI2" type="SMALLINT" unit="dBm" />
            <field name="LWB_RSSI3" type="SMALLINT" unit="dBm" />
            <field name="LWB_FSR" type="DOUBLE" unit="%" />
            <field name="LWB_TX_BUF" type="SMALLINT" />
            <field name="LWB_RX_BUF" type="SMALLINT" />
            <field name="LWB_TX_DROP" type="SMALLINT" />
            <field name="LWB_RX_DROP" type="SMALLINT" />
            <field name="LWB_BOOTSTRAP_CNT" type="SMALLINT" />
            <field name="LWB_SLEEP_CNT" type="SMALLINT" />
            <field name="LFXT_TICKS" type="BIGINT" unit="32kHz ticks" />
        </output-structure>
    </processing-class>
    <description>Converted DPP Status messages from the ETZ deployment</description>
    <life-cycle pool-size="10" />
    <addressing />
    <storage />
    <streams>
        <stream name="data">
            <source alias="source" storage-size="1" sampling-rate="1">
                <address wrapper="local">
                    <predicate key="query"> select * from ETZ_DPP_Status__mapped </predicate>
                    <predicate key="start-time">continue</predicate>
                </address>
                <query> select * from wrapper </query>
            </source>
            <query> select * from source </query>
        </stream>
    </streams>
</virtual-sensor>
