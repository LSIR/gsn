# OAUTH2 for external access
POST    /oauth2/token             controllers.gsn.OAuth2Controller.accessToken
GET     /oauth2/auth              controllers.gsn.OAuth2Controller.auth  
POST    /oauth2/auth              controllers.gsn.OAuth2Controller.doAuth
GET     /oauth2/client            controllers.gsn.OAuth2Controller.listClients
POST    /oauth2/client            controllers.gsn.OAuth2Controller.editClient    

# Authentication
GET     /                                controllers.gsn.auth.LocalAuthController.index
GET     /assets/javascript/routes.js     controllers.gsn.auth.LocalAuthController.jsRoutes
GET     /profile                         controllers.gsn.auth.LocalAuthController.profile
GET     /login                           controllers.gsn.auth.LocalAuthController.login
POST    /login                           controllers.gsn.auth.LocalAuthController.doLogin
GET     /logout                          com.feth.play.module.pa.controllers.Authenticate.logout
GET     /authenticate/:provider          com.feth.play.module.pa.controllers.Authenticate.authenticate(provider: String)
GET     /signup                          controllers.gsn.auth.LocalAuthController.signup
POST    /signup                          controllers.gsn.auth.LocalAuthController.doSignup
GET     /accounts/unverified             controllers.gsn.auth.Signup.unverified
GET     /authenticate/:provider/denied   controllers.gsn.auth.Signup.oAuthDenied(provider: String)
GET     /accounts/verify/:token          controllers.gsn.auth.Signup.verify(token: String)
GET     /accounts/exists                 controllers.gsn.auth.Signup.exists
GET     /accounts/password/reset/:token  controllers.gsn.auth.Signup.resetPassword(token: String)
POST    /accounts/password/reset         controllers.gsn.auth.Signup.doResetPassword
GET     /accounts/password/change        controllers.gsn.auth.Account.changePassword
POST    /accounts/password/change        controllers.gsn.auth.Account.doChangePassword
GET     /accounts/edit                   controllers.gsn.auth.Account.editProfile
POST    /accounts/edit                   controllers.gsn.auth.Account.doEditProfile
GET     /accounts/verify                 controllers.gsn.auth.Account.verifyEmail
GET     /accounts/add                    controllers.gsn.auth.Account.link
GET     /accounts/link                   controllers.gsn.auth.Account.askLink
POST    /accounts/link                   controllers.gsn.auth.Account.doLink
GET     /accounts/merge                  controllers.gsn.auth.Account.askMerge
POST    /accounts/merge                  controllers.gsn.auth.Account.doMerge
GET     /login/password/forgot           controllers.gsn.auth.Signup.forgotPassword(email: String ?= "")
POST    /login/password/forgot           controllers.gsn.auth.Signup.doForgotPassword

#Permissions
GET     /access/groups                    controllers.gsn.auth.PermissionsController.groups(page:Int=1)
POST    /access/groups/:page/edit         controllers.gsn.auth.PermissionsController.addgroup(page:Int)
POST    /access/groups/:page/addto        controllers.gsn.auth.PermissionsController.addtogroup(page:Int)
POST    /access/groups/:page/removefrom   controllers.gsn.auth.PermissionsController.removefromgroup(page:Int)
GET     /access/groups/:page              controllers.gsn.auth.PermissionsController.groups(page:Int)
GET     /access/vs                        controllers.gsn.auth.PermissionsController.vs(page:Int=1)
POST    /access/vs/:page/addto            controllers.gsn.auth.PermissionsController.addtovs(page:Int)
POST    /access/vs/:page/removefrom       controllers.gsn.auth.PermissionsController.removefromvs(page:Int)
GET     /access/vs/:page                  controllers.gsn.auth.PermissionsController.vs(page:Int)
GET     /access/users/add                 controllers.gsn.auth.LocalAuthController.adduser
POST    /access/users/add                 controllers.gsn.auth.LocalAuthController.doAdduser
GET     /access/users                     controllers.gsn.auth.PermissionsController.users(page:Int=1)
POST    /access/users/:page/addrole       controllers.gsn.auth.PermissionsController.addrole(page:Int)
POST    /access/users/:page/removerole    controllers.gsn.auth.PermissionsController.removerole(page:Int)
POST    /access/users/:page/delete        controllers.gsn.auth.PermissionsController.deleteuser(page:Int)
GET     /access/users/:page               controllers.gsn.auth.PermissionsController.users(page:Int)

#API
GET  /assets/*file                                 controllers.Assets.at(path="/public", file)
GET  /api/user                                     controllers.gsn.api.SensorService.userInfo
POST /api/sensors/download                         controllers.gsn.api.SensorService.download
GET  /api/sensors 			                       controllers.gsn.api.SensorService.sensors
GET  /api/sensors/search                           controllers.gsn.api.SensorService.sensorSearch
GET  /api/sensors/:sensorid/data                   controllers.gsn.api.SensorService.sensorData(sensorid:String)
POST /api/sensors/:sensorid/data                   controllers.gsn.api.SensorService.uploadSensorData(sensorid:String)
GET  /api/sensors/:sensorid                        controllers.gsn.api.SensorService.sensorMetadata(sensorid:String)
GET  /api/sensors/:sensorid/field/:fieldid         controllers.gsn.api.SensorService.sensorField(sensorid:String,fieldid:String)
GET  /api/sensors/:sensorid/field/:fieldid/process controllers.gsn.api.DataProcessService.processData(sensorid:String,fieldid:String)
GET  /api/sensors/:sensorid/grid                   controllers.gsn.api.GridService.gridData(sensorid:String)
GET  /api/sensors/:sensorid/grid/timeseries        controllers.gsn.api.GridService.gridTimeseries(sensorid:String)
GET  /api/sensors/:sensorid/stream                 controllers.gsn.api.WebSocketForwarder.socket(sensorid:String)


