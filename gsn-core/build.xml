<project name="gsn" default="build" basedir="." xmlns:artifact="antlib:org.apache.maven.artifact.ant">

    <property name="gsn-controller-port" value="22932"/>
    <property name="max-servlets" value="20"/>
    <property name="max-form-size" value="500000000"/>
    <property name="max-db-connections" value="8"/>
    <property name="max-sliding-db-connections" value="8"/>
    <property name="remote-keep-alive-period" value="15000"/>
    <property name="aes-enc-salt" value="this is a simple clear salt"/>

    <!-- Internal -->
	 <path id="maven-ant-tasks.classpath" path="../lib/build/maven-ant-tasks-2.1.3.jar" />
	  <typedef resource="org/apache/maven/artifact/ant/antlib.xml"
	           uri="antlib:org.apache.maven.artifact.ant"
	           classpathref="maven-ant-tasks.classpath" />
	
    <target name="init" description="Initializes properties and initialization tasks.">
        <tstamp>
            <format property="TODAY" pattern="yyyy-MMMM-d-'at'-hh-mm-aa" locale="en"/>
        </tstamp>
        <property environment="env"/>
    	<property name="doc.dir" value="docs/" />
        <property name="conf.dir" value="../conf"/>
        <property name="resources.dir" value="src/main/resources"/>
        <property name="build.dir" value="target/classes"/>    	
        <property name="src.dir" value="src/main/java"/>
        <property name="jars" value="jars"/>
        <property name="libdir" value="../lib"/>
        <property name="maxMemoryUsage" value="128m"/>
        <property name="jar.file" value="gsn-core.jar"/>
        <path id="classpath">
            <pathelement location="${conf.dir}/"/>
            <pathelement location="${build.dir}/"/>
            <pathelement location="${env.JAVA_HOME}/lib/tools.jar"/>
            <fileset dir="${libdir}">
                <include name="**/*.jar"/>
            </fileset>
        	  <fileset refid="gsndeps" />
        </path>
    </target>

    <target name="setup" depends="init" description="Setup the build target.">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="logs"/>
    	<echo>${ant.java.version}</echo>
    </target>

    <target name="build" depends="setup" description="Compile the cource code.">
        <javac debug="true" srcdir="${src.dir}" optimize="off"
               destdir="${build.dir}" failonerror="true" classpathref="classpath">
        </javac>
    	<copy todir="${build.dir}">
    	    <fileset dir="${resources.dir}" includes="**/*.conf,**/*.properties" />
    	</copy>
    </target>

    <target name="cleandb" depends="build">
        <java classname="gsn.storage.CleanDB" fork="true" dir="${basedir}" inputstring=""  classpathref="classpath" />
    </target>


    <!-- Run -->

    <target name="gsn" depends="cleandb" description="Run GSN server in non graphical mode.">
        <java classname="gsn.Main" maxmemory="${maxMemoryUsage}" spawn="false" fork="true" dir="${basedir}" classpathref="classpath">
            <jvmarg value="-Djavax.xml.parsers.DocumentBuilderFactory=com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl"/>
            <jvmarg value="-Dorg.apache.commons.logging.Log=org.apache.commons.logging.impl.Log4JLogger"/>
            <jvmarg value="-DmaxServlets=${max-servlets}"/>
            <jvmarg value="-DmaxDBConnections=${max-db-connections}"/>
            <jvmarg value="-DmaxSlidingDBConnections=${max-sliding-db-connections}"/>
            <jvmarg value="-Dorg.eclipse.jetty.server.Request.maxFormContentSize=${max-form-size}"/>
            <jvmarg value="-Dsalt=${aes-enc-salt}"/>
            <jvmarg value="-DremoteKeepAlivePeriod=${remote-keep-alive-period}"/>
            <!-- <jvmarg value="-Djava.library.path=/usr/local/lib/R/site-library/rJava/jri"/>  uncomment this under Linux to load rJava lib -->
            <!-- <jvmarg value="-Djava.library.path=C:\\users\\admin\\Documents/R/win-library/2.12/rJava/jri"/>  uncomment this under Windows to load rJava lib -->
            <arg id="gsnc-port" value="${gsn-controller-port}"/>
            <!-- <jvmarg value="-server"/> Sometimes on windows compaines about a missing dll.-->
        </java>
    </target>

    <target name="restart" depends="stop,gsn" description="Restart GSN Server in non graphical mode."/>

    <target name="stop" depends="build" description="Stop the running GSN server (if any).">
        <java classname="gsn.GSNStop" maxmemory="${maxMemoryUsage}" fork="false" dir="${basedir}"
              classpathref="classpath">
            <arg id="gsnc-port" value="${gsn-controller-port}"/>
        </java>
    </target>


    <!-- Dev -->

    <target name="clean" depends="init" description="Erase built files and target.">
        <delete includeEmptyDirs="yes" failonerror="no">
            <fileset dir="${build.dir}" includes="**/*.class,**/*.xml"/>
            <fileset dir="${build.dir}" includes="**/*.xml"/>
            <fileset dir="${jars}" includes="**/*"/>
        </delete>
    </target>


    <!-- Tests -->

    <target name="tests" depends="build" description="Runs JUnit tests">
        <junit printsummary="on" haltonerror="off" haltonfailure="off" showoutput="on">
            <formatter type="xml" usefile="true"/>
            <classpath refid="classpath"/>
            <batchtest todir="${reports}/junit">
                <fileset dir="${build.dir}">
                    <include name="**/*Test*.class"/>
                    <exclude name="**/TestStreamExporterVirtualSensor.class"/>
                    <exclude name="**/TestContainerImpl.class"/>
                    <exclude name="**/RFIDTest.class"/>
                    <exclude name="**/TestDataPropogation.class"/>
                    <exclude name="**/TestVSensorLoader.class"/>
                    <exclude name="**/TestStreamSource.class"/>
                    <exclude name="**/TestWindowing1.class"/>
                    <exclude name="**/TestWindowing2.class"/>
                    <exclude name="**/TestPublicToMSR.class"/>
                    <exclude name="**/TestService.class"/>
                    <exclude name="**/TestDataPacket.class"/>
                    <exclude name="**/TestSQLUtils.class"/>
                    <exclude name="**/TestStreamElement.class"/>
                    <exclude name="**/TestValidityTools.class"/>
                    <exclude name="**/TestGraph.class"/>
                    <exclude name="**/TestContainerImpl.class"/>
                    <exclude name="**/TestStreamExporterVirtualSensor.class"/>
                    <exclude name="**/TestStorageManager.class"/>
                    <exclude name="**/TestAbstractWrapper.class"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <!-- Distribution -->

    <target name="docs" depends="setup">
        <javadoc classpathref="classpath" destdir="${doc.dir}/javadoc" author="false" version="true" use="true"
                 windowtitle="Global Sensor Network Infrastructure">
            <fileset dir="${src.dir}" defaultexcludes="yes">
                <include name="**/*.java"/>
                <exclude name="**/*Test.java"/>
            </fileset>
            <doctitle>Global Sensor Network</doctitle>
            <bottom>GSN Development Team.</bottom>
            <tag name="todo" scope="all" description="To do:"/>
        </javadoc>
        <!--
        <documentdoclet destdir="${reports}/todos">
            <fileset dir="${src.dir}">
                <include name="**/*.java"/>
            </fileset>
            <info/>
        </documentdoclet>
        -->
    </target>
        
    <target name="jar" depends="clean,build" description="Create a jar file containing the GSN classes.">
        <jar destfile="${jars}/${jar.file}" basedir="${build.dir}">
            <manifest>
                <attribute name="Built-By" value="GSN Development Team."/>
                <attribute name="Main-Class" value="gsn.Main"/>
            </manifest>
        </jar>
    </target>

	 <artifact:remoteRepository id="lsir.release" url="http://osper.epfl.ch:8081/artifactory/gsn-release/">
	      <releases enabled="true"/>
	      <snapshots enabled="true"/>
	    </artifact:remoteRepository>

	<artifact:pom id="gsnpom" file="pom.xml"></artifact:pom>
	<artifact:dependencies filesetId="gsndeps" pomRefId="gsnpom" />
</project>
